{"ast":null,"code":"var _jsxFileName = \"/Users/tombo/Documents/my_codelan_work/projects/job-tracker/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport ApplicationsForm from \"./components/ApplicationsForm\";\nimport ApplicationsGrid from \"./containers/ApplicationsGrid\";\nimport { getApplications } from \"./services/ApplicationService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [guestApplications, setGuestApplications] = useState([]);\n  useEffect(() => {\n    getApplications().then(allApplications => {\n      setGuestApplications(allApplications);\n    });\n  }, []);\n\n  const addApplication = Application => {\n    const temp = guestApplications.map(s => s);\n    temp.push(Application);\n    setGuestApplications(temp);\n  };\n\n  const removeApplication = id => {\n    const temp = guestApplications.map(s => s);\n    const indexToDel = temp.map(s => s._id).indexOf(id);\n    console.log(indexToDel);\n    temp.splice(indexToDel, 1);\n    setGuestApplications(temp);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ApplicationsForm, {\n      addApplication: addApplication\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ApplicationsGrid, {\n      Applications: guestApplications,\n      removeApplication: removeApplication\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"sPU/S8OivN0jD9y6FR32QHS0eoI=\");\n\n_c = App;\nexport default App; //DONE\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tombo/Documents/my_codelan_work/projects/job-tracker/client/src/App.js"],"names":["useState","useEffect","ApplicationsForm","ApplicationsGrid","getApplications","App","guestApplications","setGuestApplications","then","allApplications","addApplication","Application","temp","map","s","push","removeApplication","id","indexToDel","_id","indexOf","console","log","splice"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,WAAP;AAEA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,SAASC,eAAT,QAAgC,+BAAhC;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CP,QAAQ,CAAC,EAAD,CAA1D;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,eAAe,GAAGI,IAAlB,CAAwBC,eAAD,IAAqB;AAC1CF,MAAAA,oBAAoB,CAACE,eAAD,CAApB;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,cAAc,GAAIC,WAAD,IAAiB;AACtC,UAAMC,IAAI,GAAGN,iBAAiB,CAACO,GAAlB,CAAuBC,CAAD,IAAOA,CAA7B,CAAb;AACAF,IAAAA,IAAI,CAACG,IAAL,CAAUJ,WAAV;AACAJ,IAAAA,oBAAoB,CAACK,IAAD,CAApB;AACD,GAJD;;AAMA,QAAMI,iBAAiB,GAAIC,EAAD,IAAQ;AAChC,UAAML,IAAI,GAAGN,iBAAiB,CAACO,GAAlB,CAAuBC,CAAD,IAAOA,CAA7B,CAAb;AACA,UAAMI,UAAU,GAAGN,IAAI,CAACC,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACK,GAAlB,EAAuBC,OAAvB,CAA+BH,EAA/B,CAAnB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AAEAN,IAAAA,IAAI,CAACW,MAAL,CAAYL,UAAZ,EAAwB,CAAxB;AACAX,IAAAA,oBAAoB,CAACK,IAAD,CAApB;AACD,GAPD;;AASA,sBACE;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,cAAc,EAAEF;AAAlC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,gBAAD;AACE,MAAA,YAAY,EAAEJ,iBADhB;AAEE,MAAA,iBAAiB,EAAEU;AAFrB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AASD;;GAjCQX,G;;KAAAA,G;AAmCT,eAAeA,GAAf,C,CAEA","sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\n\nimport ApplicationsForm from \"./components/ApplicationsForm\";\nimport ApplicationsGrid from \"./containers/ApplicationsGrid\";\nimport { getApplications } from \"./services/ApplicationService\";\n\nfunction App() {\n  const [guestApplications, setGuestApplications] = useState([]);\n\n  useEffect(() => {\n    getApplications().then((allApplications) => {\n      setGuestApplications(allApplications);\n    });\n  }, []);\n\n  const addApplication = (Application) => {\n    const temp = guestApplications.map((s) => s);\n    temp.push(Application);\n    setGuestApplications(temp);\n  };\n\n  const removeApplication = (id) => {\n    const temp = guestApplications.map((s) => s);\n    const indexToDel = temp.map((s) => s._id).indexOf(id);\n    console.log(indexToDel);\n\n    temp.splice(indexToDel, 1);\n    setGuestApplications(temp);\n  };\n\n  return (\n    <>\n      <ApplicationsForm addApplication={addApplication} />\n      <ApplicationsGrid\n        Applications={guestApplications}\n        removeApplication={removeApplication}\n      />\n    </>\n  );\n}\n\nexport default App;\n\n//DONE"]},"metadata":{},"sourceType":"module"}